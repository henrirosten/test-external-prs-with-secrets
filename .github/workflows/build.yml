name: build

on:
  pull_request_target:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  check-identity:
    runs-on: ubuntu-latest
    outputs:
      authorized_user: ${{ steps.check-authorized-user.outputs.authorized_user}}
    environment: 'internal-build-workflow'
    steps:
      - name: Check identity
        id: check-authorized-user
        shell: bash
        run: |
          echo "Changed from internal PR"
          authorized_user='False'
          for user in ${{ vars.AUTHORIZED_USERS }};
          do
            if [ "$user" = "${{ github.actor }}" ]; then
              authorized_user='True'
              break
            fi
          done
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.repository: ${{ github.repository }}"
          echo "github.event.pull_request.head.repo.full_name: ${{ github.event.pull_request.head.repo.full_name }}"
          echo "github.actor: ${{ github.actor }}"
          echo "authorized_user=$authorized_user"
          echo "authorized_user=$authorized_user" >> "$GITHUB_OUTPUT"

  authorize-internal:
    needs: [check-identity]
    runs-on: ubuntu-latest
    if: ${{ needs.check-identity.outputs.authorized_user == 'True' }}
    steps:
      - name: Authorize internal
        run: echo "authorized"

  authorize-external:
    needs: [check-identity]
    runs-on: ubuntu-latest
    if: ${{ needs.check-identity.outputs.authorized_user == 'False' }}
    environment: 
      ${{ ( github.event_name == 'pull_request_target' &&
            github.event.pull_request.head.repo.full_name != github.repository && 
            'external-build-workflow' ) || ( 'internal-build-workflow' ) }}
    steps:
      - name: Authorize external
        run: echo "authorized"

  authorize:
    needs: [authorize-internal, authorize-external]
    runs-on: ubuntu-latest
    if: |
      always() &&
      (needs.authorize-internal.result == 'success' || needs.authorize-internal.result == 'skipped') &&
      (needs.authorize-external.result == 'success' || needs.authorize-external.result == 'skipped') &&
       !(needs.authorize-internal.result == 'skipped' && needs.authorize-external.result == 'skipped')
    steps:
      - name: Authorize
        run: echo "authorized"

  build-yml-check:
    uses: ./.github/workflows/build-yml-check.yml

  build:
    needs: [authorize, build-yml-check]
    runs-on: ubuntu-latest
    if: |
      always() &&
      needs.authorize.result == 'success' &&
      needs.build-yml-check.outputs.result == 'not-changed'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - name: Print REPO_SECRET
        run: printenv REPO_SECRET 
        env:
          REPO_SECRET: ${{ secrets.REPO_SECRET }}
